{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js"],"names":["__webpack_exports__","_ref4","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","css","_ref","allMarkdownRemark","totalCount","edges","map","_ref5","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","_ref2","rhythm","frontmatter","title","_ref3","date","excerpt","query","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape","__webpack_require__","d","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","gatsby__WEBPACK_IMPORTED_MODULE_3__","site","siteMetadata","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"iWAMeA,EAAA,iBAAAC,GAAY,IAAVC,EAAUD,EAAVC,KACf,OACEC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,WACEA,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAGC,GADL,gCAQAJ,OAAAC,EAAA,EAAAD,CAAA,UAAKD,EAAKM,kBAAkBC,WAA5B,UACCP,EAAKM,kBAAkBE,MAAMC,IAAI,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,KAAF,OAChCV,OAAAC,EAAA,EAAAD,CAAA,OAAKW,IAAKD,EAAKE,IACbZ,OAAAC,EAAA,EAAAD,CAACa,EAAA,KAAD,CACEC,GAAIJ,EAAKK,OAAOC,KAChBb,IAAGc,GAKHjB,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAKA,YAAF,iBACgBe,YAAO,KADvB,MAIFR,EAAKS,YAAYC,MAAO,IACzBpB,OAAAC,EAAA,EAAAD,CAAA,QACEG,IAAGkB,GADL,KAKKX,EAAKS,YAAYG,OAGxBtB,OAAAC,EAAA,EAAAD,CAAA,SAAIU,EAAKa,gBAShB,IAAMC,EAAK,kCCnDlB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qnBCY/C,IAAMK,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBlC,OAAAC,EAAA,EAAAD,CAAC8B,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMnC,MACLqC,EAAgBF,EAAMV,QAAUY,EAAgBF,EAAMV,OAAOzB,MAEtDmC,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMnC,KAAOmC,EAAMnC,KAAKA,KAAOqC,EAAgBF,EAAMV,OAAOzB,MAGvDC,OAAAC,EAAA,EAAAD,CAAA,uCAaf,SAASuC,IACP,MAAM,IAAIC,MACR,gVATJP,EAAYQ,UAAY,CACtB1C,KAAM2C,IAAUC,OAChBnB,MAAOkB,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,wGC7BhBC,EAAmB,SAAA3C,GAAkB,IAAf4C,EAAe5C,EAAf4C,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOrB,IAAMsB,cAAcC,IAApBtD,OAAAuD,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUe,MAAM,CACxBL,SAAUV,IAAUE,OAAOC,aAC1BA,YAGUE,8CCrBfW,EAAAC,EAAA9D,EAAA,sBAAAqB,IAAA,IAAA0C,EAAAF,EAAA,KAAAG,EAAAH,EAAAI,EAAAF,GAAAG,EAAAL,EAAA,KAAAM,EAAAN,EAAAI,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAGrBjD,EAAS+C,EAAW/C,+HCAlBrB,EAAA,WAAAoB,GAAA,IAAEqB,EAAFrB,EAAEqB,SAAF,OACbtC,OAAAC,EAAA,EAAAD,CAACoE,EAAA,YAAD,CACE5C,MAAK,aASLa,OAAQ,SAAAtC,GAAI,OACVC,OAAAC,EAAA,EAAAD,CAAA,OACEG,IAAKA,YAAF,yCAGUe,YAAO,GAHjB,gBAIcA,YAAO,KAJrB,MAOHlB,OAAAC,EAAA,EAAAD,CAACoE,EAAA,KAAD,CAAMtD,GAAE,KACNd,OAAAC,EAAA,EAAAD,CAAA,MACEG,IAAKA,YAAF,iBACgBe,YAAO,GADvB,6CAMFnB,EAAKsE,KAAKC,aAAalD,QAG5BpB,OAAAC,EAAA,EAAAD,CAACoE,EAAA,KAAD,CACEtD,GAAE,UACFX,IAAGC,GAFL,SAQCkC,IAtCPvC,KAAAwE","file":"component---src-pages-index-js-e628aef6c4a8d755e016.js","sourcesContent":["import React from 'react'\nimport {css} from '@emotion/core'\nimport {Link, graphql} from 'gatsby'\nimport {rhythm} from '../utils/typography'\nimport Layout from '../components/layout'\n\nexport default ({data}) => {\n  return (\n    <Layout>\n      <div>\n        <h1\n          css={css`\n            display: inline-block;\n            border-bottom: 1px solid;\n          `}\n        >\n          Amazing Pandas Eating Things\n        </h1>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {data.allMarkdownRemark.edges.map(({node}) => (\n          <div key={node.id}>\n            <Link\n              to={node.fields.slug}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <h3\n                css={css`\n                  margin-bottom: ${rhythm(1 / 4)};\n                `}\n              >\n                {node.frontmatter.title}{' '}\n                <span\n                  css={css`\n                    color: #bbb;\n                  `}\n                >\n                  â€” {node.frontmatter.date}\n                </span>\n              </h3>\n              <p>{node.excerpt}</p>\n            </Link>\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Typography from 'typography'\nimport kirkhamTheme from 'typography-theme-kirkham'\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport {css} from '@emotion/core'\nimport {StaticQuery, Link, graphql} from 'gatsby'\n\nimport {rhythm} from '../utils/typography'\n\nexport default ({children}) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(2)};\n          padding-top: ${rhythm(1.5)};\n        `}\n      >\n        <Link to={`/`}>\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(2)};\n              display: inline-block;\n              font-style: normal;\n            `}\n          >\n            {data.site.siteMetadata.title}\n          </h3>\n        </Link>\n        <Link\n          to={`/about/`}\n          css={css`\n            float: right;\n          `}\n        >\n          About\n        </Link>\n        {children}\n      </div>\n    )}\n  />\n)\n"],"sourceRoot":""}